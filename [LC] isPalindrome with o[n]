class Solution {
    public boolean isPalindrome(String s) {
        s=s.replaceAll("[^A-Za-z0-9]", "").toLowerCase();
        System.out.println(s);
        int left=0;
        int right=s.length()-1;
        while (left<=right){
            if(s.charAt(left)!=s.charAt(right)){
                return false;
              
            }
            else{
                left++;
                right--;
            }
        }
        return true;
    }
}

Problem satement:: https://leetcode.com/problems/valid-palindrome/description/

second approachh::: 
class Solution {
    public boolean isPalindrome(String s) {
        if (s.isEmpty()) {
        	return true;
        }
        int start = 0;
        int last = s.length() - 1;
        while(start <= last) {
        	char currFirst = s.charAt(start);
        	char currLast = s.charAt(last);
        	if (!Character.isLetterOrDigit(currFirst )) {
        		start++;
        	} else if(!Character.isLetterOrDigit(currLast)) {
        		last--;
        	} else {
        		if (Character.toLowerCase(currFirst) != Character.toLowerCase(currLast)) {
        			return false;
        		}
        		start++;
        		last--;
        	}
        }
        return true;
    }
}
